name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: .env
    steps:

      - name: Checkout
        uses: actions/checkout@v1
        
      - name: see the directory
        run: ls -la ../

      - name: see the directory
        run: ls -la ../ahjin-api

      - name: see the directory
        run: ls -la ../ahjin-api/../ahjin-api

      - name: Make envfile
        run: |
          touch ${{ github.workspace }}/.env-prod
          echo KHALTI_SECRET_KEY= ${{ secrets.KHALTI_SECRET_KEY }} >> ${{ github.workspace }}/.env-prod
          echo POSTGRES_HOST= db >> ${{ github.workspace }}/.env-prod
          echo POSTGRES_NAME= app >> ${{ github.workspace }}/.env-prod
          echo POSTGRES_USER= postgres >> ${{ github.workspace }}/.env-prod
          echo POSTGRES_PASSWORD= ${{ secrets.POSTGRES_PASSWORD }} >> ${{ github.workspace }}/.env-prod
          echo DJANGO_ALLOWED_HOSTS= localhost 127.0.0.1 0.0.0.0 [::1] >> ${{ github.workspace }}/.env-prod
          echo GMAIL_PW= ${{ secrets.GMAIL_PW }} >> ${{ github.workspace }}/.env-prod
          echo GMAIL_ACC= ${{ secrets.GMAIL_ACC }} >> ${{ github.workspace }}/.env-prod
          echo EMAIL_USE_TLS= True >> ${{ github.workspace }}/.env-prod
          echo EMAIL_HOST= smtp.gmail.com >> ${{ github.workspace }}/.env-prod
          echo FRONT_END_URL= http://localhost:3000 >> ${{ github.workspace }}/.env-prod
          echo EMAIL_BACKEND= django.core.mail.backends.smtp.EmailBackend >> ${{ github.workspace }}/.env-prod
          echo EMAIL_VERIFICATION_OPTION= mandatory >> ${{ github.workspace }}/.env-prod
          ls ${{ github.workspace }}/
          cat ${{ github.workspace }}/.env-prod
        shell: bash


      - name: Build the Docker image
        run: docker-compose -f "docker-compose-prod.yaml" build

      - name: Perform some test and linting
        run: echo "PERFORMING SOME TEST AND CHECKING LINTING"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PW }}

      - name: Build and push
        run: docker-compose -f "docker-compose-prod.yaml" push

      - name: Stop container
        if: always()
        run: docker-compose -f "docker-compose-prod.yaml" down
