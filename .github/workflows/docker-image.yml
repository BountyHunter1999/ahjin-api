name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker:
      runs-on: ubuntu-latest
      environment: .env
      steps:
        - name: Make envfile
          uses: SpicyPizza/create-envfile@v1.3
          with:
            KHALTI_SECRET_KEY: ${{ secrets.KHALTI_SECRET_KEY }}
            POSTGRES_HOST: db
            POSTGRES_NAME: app
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 0.0.0.0 [::1]
            GMAIL_PW: ${{ secrets.GMAIL_PW }}
            GMAIL_ACC: ${{ secrets.GMAIL_ACC }}
            EMAIL_USE_TLS: True
            EMAIL_HOST: smtp.gmail.com
            FRONT_END_URL: http://localhost:3000
            EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
            EMAIL_VERIFICATION_OPTION: mandatory
            
            
            directory: <directory_name>
            file_name: .env
            fail_on_empty: false
            
        - name: Checkout
          uses: actions/checkout@v1
          
        -
          name: Build the Docker image
          run: docker-compose -f "docker-compose-prod.yaml" build
          
        -
          name: Perform some test and linting
          run: echo "PERFORMING SOME TEST AND CHECKING LINTING"
          
        -  
          name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PW }}
            
        - 
          name: Build and push
          run: docker-compose -f "docker-compose-prod.yaml" push
          
        - name: Stop container
          if: always()
          run: docker-compose -f "docker-compose-prod.yaml" down

