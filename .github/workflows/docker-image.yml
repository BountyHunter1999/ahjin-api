name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker:
      runs-on: ubuntu-latest
      environment: .env
      steps:
        - name: Make envfile
          run: |
            touch /home/runner/work/ahjin-api/ahjin-api/.env
            echo KHALTI_SECRET_KEY= ${{ secrets.KHALTI_SECRET_KEY }} >> .env
            echo POSTGRES_HOST= db >> .env
            echo POSTGRES_NAME= app >> .env
            echo POSTGRES_USER= postgres >> .env
            echo POSTGRES_PASSWORD= ${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DJANGO_ALLOWED_HOSTS= localhost 127.0.0.1 0.0.0.0 [::1] >> .env
            echo GMAIL_PW= ${{ secrets.GMAIL_PW }} >> .env
            echo GMAIL_ACC= ${{ secrets.GMAIL_ACC }} >> .env
            echo EMAIL_USE_TLS= True >> .env
            echo EMAIL_HOST= smtp.gmail.com >> .env
            echo FRONT_END_URL= http://localhost:3000 >> .env
            echo EMAIL_BACKEND= django.core.mail.backends.smtp.EmailBackend >> .env
            echo EMAIL_VERIFICATION_OPTION= mandatory >> .env
            
        - name: Checkout
          uses: actions/checkout@v1
          
        -
          name: Build the Docker image
          run: docker-compose -f "docker-compose-prod.yaml" build
          
        -
          name: Perform some test and linting
          run: echo "PERFORMING SOME TEST AND CHECKING LINTING"
          
        -  
          name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PW }}
            
        - 
          name: Build and push
          run: docker-compose -f "docker-compose-prod.yaml" push
          
        - name: Stop container
          if: always()
          run: docker-compose -f "docker-compose-prod.yaml" down

